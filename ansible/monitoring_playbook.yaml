---
- name: Install prometheus and grafana
  hosts: aws
  become: true

  tasks:
    - name:  Copy prometheus configs to ec2
      copy:
        src: ./prometheus
        dest: /home/ubuntu/

    - name:  Copy grafana configs to ec2
      copy:
        src: ./grafana
        dest: /home/ubuntu/

    - name: Create custom network
      docker_network:
        name: custom

    - name: Create prometheus container
      docker_container:
        name: prometheus
        image: prom/prometheus:latest
        restart_policy: unless-stopped
        volumes:
          - /home/ubuntu/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        state: started
        networks:
          - name: custom
        ports: 
          - 9090:9090

    - name: Create grafana container
      docker_container:
        name: grafana
        image: grafana/grafana:latest
        restart_policy: unless-stopped
        volumes:
          - /home/ubuntu/grafana:/usr/share/grafana/conf/provisioning
        env:
          GF_PATHS_PROVISIONING: /usr/share/grafana/conf/provisioning
        state: started
        networks:
          - name: custom
        ports: 
          - 3000:3000

    - name: Create node-exporter container
      docker_container:
        name: node-exporter
        image: prom/node-exporter:latest
        restart_policy: unless-stopped
        volumes:
          - /proc:/host/proc:ro
          - /sys:/host/sys:ro
          - /:/rootfs:ro
        command:
          - "--web.listen-address=:9100"
          - "--path.procfs=/host/proc"
          - "--path.sysfs=/host/sys"
          - "--path.rootfs=/rootfs"
          - "--collector.filesystem.ignored-mount-points='^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'"
        state: started
        networks:
          - name: custom
        ports:
          - 9100:9100